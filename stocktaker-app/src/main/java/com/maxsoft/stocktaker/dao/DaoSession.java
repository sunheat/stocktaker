package com.maxsoft.stocktaker.dao;

import android.database.sqlite.SQLiteDatabase;

import java.util.Map;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.AbstractDaoSession;
import de.greenrobot.dao.identityscope.IdentityScopeType;
import de.greenrobot.dao.internal.DaoConfig;

import com.maxsoft.stocktaker.dao.Brand;
import com.maxsoft.stocktaker.dao.Unit;
import com.maxsoft.stocktaker.dao.Size;
import com.maxsoft.stocktaker.dao.CommodityCategory;
import com.maxsoft.stocktaker.dao.SKU;
import com.maxsoft.stocktaker.dao.StocktakingRecord;

import com.maxsoft.stocktaker.dao.BrandDao;
import com.maxsoft.stocktaker.dao.UnitDao;
import com.maxsoft.stocktaker.dao.SizeDao;
import com.maxsoft.stocktaker.dao.CommodityCategoryDao;
import com.maxsoft.stocktaker.dao.SKUDao;
import com.maxsoft.stocktaker.dao.StocktakingRecordDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see de.greenrobot.dao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig brandDaoConfig;
    private final DaoConfig unitDaoConfig;
    private final DaoConfig sizeDaoConfig;
    private final DaoConfig commodityCategoryDaoConfig;
    private final DaoConfig sKUDaoConfig;
    private final DaoConfig stocktakingRecordDaoConfig;

    private final BrandDao brandDao;
    private final UnitDao unitDao;
    private final SizeDao sizeDao;
    private final CommodityCategoryDao commodityCategoryDao;
    private final SKUDao sKUDao;
    private final StocktakingRecordDao stocktakingRecordDao;

    public DaoSession(SQLiteDatabase db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        brandDaoConfig = daoConfigMap.get(BrandDao.class).clone();
        brandDaoConfig.initIdentityScope(type);

        unitDaoConfig = daoConfigMap.get(UnitDao.class).clone();
        unitDaoConfig.initIdentityScope(type);

        sizeDaoConfig = daoConfigMap.get(SizeDao.class).clone();
        sizeDaoConfig.initIdentityScope(type);

        commodityCategoryDaoConfig = daoConfigMap.get(CommodityCategoryDao.class).clone();
        commodityCategoryDaoConfig.initIdentityScope(type);

        sKUDaoConfig = daoConfigMap.get(SKUDao.class).clone();
        sKUDaoConfig.initIdentityScope(type);

        stocktakingRecordDaoConfig = daoConfigMap.get(StocktakingRecordDao.class).clone();
        stocktakingRecordDaoConfig.initIdentityScope(type);

        brandDao = new BrandDao(brandDaoConfig, this);
        unitDao = new UnitDao(unitDaoConfig, this);
        sizeDao = new SizeDao(sizeDaoConfig, this);
        commodityCategoryDao = new CommodityCategoryDao(commodityCategoryDaoConfig, this);
        sKUDao = new SKUDao(sKUDaoConfig, this);
        stocktakingRecordDao = new StocktakingRecordDao(stocktakingRecordDaoConfig, this);

        registerDao(Brand.class, brandDao);
        registerDao(Unit.class, unitDao);
        registerDao(Size.class, sizeDao);
        registerDao(CommodityCategory.class, commodityCategoryDao);
        registerDao(SKU.class, sKUDao);
        registerDao(StocktakingRecord.class, stocktakingRecordDao);
    }
    
    public void clear() {
        brandDaoConfig.getIdentityScope().clear();
        unitDaoConfig.getIdentityScope().clear();
        sizeDaoConfig.getIdentityScope().clear();
        commodityCategoryDaoConfig.getIdentityScope().clear();
        sKUDaoConfig.getIdentityScope().clear();
        stocktakingRecordDaoConfig.getIdentityScope().clear();
    }

    public BrandDao getBrandDao() {
        return brandDao;
    }

    public UnitDao getUnitDao() {
        return unitDao;
    }

    public SizeDao getSizeDao() {
        return sizeDao;
    }

    public CommodityCategoryDao getCommodityCategoryDao() {
        return commodityCategoryDao;
    }

    public SKUDao getSKUDao() {
        return sKUDao;
    }

    public StocktakingRecordDao getStocktakingRecordDao() {
        return stocktakingRecordDao;
    }

}
